type SgNetwork @entity {
  id: ID! 
  name: String!
}

type SgTransfer @entity {
  "hash"
  id: ID!
  network: SgNetwork!
  from: String!
  to: String!
  amount: BigInt!
}

type SgBalanceData @entity {
  "address"
  id: ID!
  netDeposit: BigInt!
  netDepositShares: BigInt!
  grossDeposit: BigInt!
  grossDepositShares: BigInt!
  grossWithdraw: BigInt!
  grossWithdrawShares: BigInt!
}

type SgHarvest @entity {
  "hash"
  id: ID!
  network: String!
  sett: SgSett!
  performanceFee: BigInt!
  strategistFee: BigInt!
  withdrawFee: BigInt!
  "total token claimed"
  harvested: BigInt!
  "total token reinvested"
  compounded: BigInt!
  "total token performance fee"
  performance: BigInt!
  "total token strategist fee"
  strategist: BigInt!
  pricePerFullShare: BigInt!
  totalSupply: BigInt!
  balance: BigInt!
}

type SgStrategy @entity {
  "address"
  id: ID!
  network: SgNetwork!
  sett: SgSett
  active: Boolean
  harvests: [SgHarvest!]
}

type SgSett @entity {
  "address"
  id: ID!
  network: SgNetwork!
  transfers: [SgTransfer!]
  deposits: [SgTransfer!]
  withdraws: [SgTransfer!]
  balanceData: SgBalanceData
  strategies: [SgStrategy!]
  harvests: [SgHarvest!]
}

type SgSettRegistry @entity {
  "address"
  id: ID!
  network: SgNetwork!
  setts: [SgSett!]
}

type SgSettBalance @entity {
  "userSettAddress"
  id: ID!
  network: SgNetwork!
  sett: SgSett
  account: SgAccount
  balanceData: SgBalanceData
}

type SgAccount @entity {
  "address"
  id: ID!
  network: SgNetwork!
  deposits: [SgTransfer!]
  withdraws: [SgTransfer!]
  transfers: [SgTransfer!]
  balances: [SgSettBalance!]
}

type SgAccountRegistry @entity {
  "registryId"
  id: ID!
  network: SgNetwork!
  accounts: [SgAccount!]
}

type SgToken @entity {
  id: ID!
  address: String!
  decimals: Int!
  name: String!
  symbol: String!
}

type SgTokenBalance @entity {
  id: ID!
  balance: BigInt!
  token: SgToken!
}